version: 2
jobs:
  build:
    parallelism: 3
    working_directory: ~/photo-site
    docker:
      - image: docker:17.05.0-ce-git
        environment:
          RAILS_ENV: test
    steps:
      - checkout

      - setup_remote_docker

      # - run: echo 'export PATH=/foo/bin:$PATH' >> $BASH_ENV
      - run:
          command: |
            mkdir -p /usr/local/etc \
              && { \
                echo 'install: --no-document'; \
                echo 'update: --no-document'; \
              } >> /usr/local/etc/gemrc
      - run: echo 'export RUBY_MAJOR=2.1' >> $BASH_ENV
      - run: echo 'export ENV BUILD_PACKAGES=""' >> $BASH_ENV
      - run: echo 'export ENV RUBY_PACKAGES="ruby ruby-io-console ruby-bundler ruby-rdoc"' >> $BASH_ENV
      - run: echo 'export RUBY_VERSION=2.1.10' >> $BASH_ENV
      - run: echo 'export RUBY_DOWNLOAD_SHA256=5be9f8d5d29d252cd7f969ab7550e31bbb001feb4a83532301c0dd3b5006e148' >> $BASH_ENV
      - run: echo 'export RUBYGEMS_VERSION=2.6.10' >> $BASH_ENV
      - run:
          command: |
            set -ex \
              \
              rm -rf /tmp/* && \
              rm -rf /var/cache/apk/* && \
              apk update && \
              apk upgrade && \
              apk add bash curl-dev ruby-dev build-base libffi-dev libpq postgresql-client postgresql postgresql-contrib postgresql-dev && \
              apk add ruby ruby-io-console ruby-bundler && \
              rm -rf /var/cache/apk/*

      # - run: curl -L https://github.com/docker/compose/releases/download/1.16.1/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose
      # - run: chmod +x /usr/local/bin/docker-compose
      - run: apk add --update python py-pip python-dev
      - run: pip install --trusted-host pypi.python.org docker-compose

      # - run: gem install bundler

      # Restore bundle cache
      - restore_cache:
          key: rails-demo-{{ checksum "Gemfile.lock" }}

      # Bundle install dependencies
      - run: bundle install --path vendor/bundle

      # Store bundle cache
      - save_cache:
          key: rails-demo-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      # - setup_remote_docker

      - run: docker network create traffic_front
      - run: docker network create traffic_back

      # - restore_cache:
      #     keys:
      #       - v1-{{ .Branch }}
      #     paths:
      #       - /caches/app.tar
      # - run:
      #     name: Load Docker image layer cache
      #     command: |
      #       set +o pipefail
      #       docker load -i /caches/app.tar | true
      - run: docker-compose -f dev-docker-compose.yml up -d
      # - run:
      #     name: Save Docker image layer cache
      #     command: |
      #       mkdir -p /caches
      #       docker save -o /caches/app.tar app
      # - save_cache:
      #     key: v1-{{ .Branch }}-{{ epoch }}
      #     paths:
      #       - /caches/app.tar

      # This should go into custom primary image, here's only for the sake of explanation
      # - run:
      #     name: Install Docker client
      #     command: |
      #       set -x
      #       VER="17.03.0-ce"
      #       curl -L -o /tmp/docker-$VER.tgz https://get.docker.com/builds/Linux/x86_64/docker-$VER.tgz
      #       tar -xz -C /tmp -f /tmp/docker-$VER.tgz
      #       mv /tmp/docker/* /usr/bin

      # - run:
      #     name: Install Docker Compose
      #     command: |
      #       set -x
      #       curl -L https://github.com/docker/compose/releases/download/1.11.2/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
      #       chmod +x /usr/local/bin/docker-compose
      - run: gem install rdoc
      - run: gem install bigdecimal

      # Database setup
      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load
