version: '2'

services:
  nginx-server:
    image: jwilder/nginx-proxy:latest
    container_name: nginx-proxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./certs:/etc/nginx/certs
      - /etc/nginx/vhost.d
      - /usr/share/nginx/html
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - back
      - front

  lets-encrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion:latest
    container_name: lets-encrypt
    restart: always
    depends_on:
      - nginx-server
    volumes:
      - ./certs:/etc/nginx/certs:rw
    volumes_from:
      - nginx-server
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - back
      - front

  thumbor:
    image: apsl/thumbor-multiprocess:latest
    volumes:
      - logs:/logs
      - data:/data
    container_name: thumbor
    restart: always
    networks:
      - front
      - back
    environment:
      - VIRTUAL_HOST=${THUMBOR_HOSTNAME}
      - VIRTUAL_PORT=8000
      - LETSENCRYPT_HOST=${THUMBOR_HOSTNAME}
      - LETSENCRYPT_EMAIL=${FB_PHOTO_SITE_EMAIL}
      - LOADER=tc_aws.loaders.s3_loader
      - SECURITY_KEY=${THUMBOR_KEY}
      - ALLOW_UNSAFE_URL=False
      - LOG_LEVEL=debug
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - TC_AWS_LOADER_BUCKET=${S3_BUCKET_NAME}
      - TC_AWS_REGION=${AWS_REGION}
      - DETECTORS=['thumbor.detectors.queued_detector.queued_complete_detector', 'thumbor.detectors.face_detector', 'thumbor.detectors.feature_detector']
      - TC_AWS_ENABLE_HTTP_LOADER=True
      - TC_AWS_RESULT_STORAGE_BUCKET=${S3_BUCKET_NAME}
      - TC_AWS_RESULT_STORAGE_ROOT_PATH=result_storage
      - RESULT_STORAGE=tc_aws.result_storages.s3_storage
      - STORAGE=thumbor.storages.mixed_storage
      - MIXED_STORAGE_FILE_STORAGE=thumbor.storages.file_storage
      - REDIS_STORAGE_SERVER_HOST=redis
      - REDIS_STORAGE_SERVER_PORT=6379
      - REDIS_STORAGE_SERVER_DB=0
      - REDIS_QUEUE_SERVER_HOST=redis
      - REDIS_QUEUE_SERVER_PORT=6379
      - REDIS_QUEUE_SERVER_DB=0
      - STORAGE_EXPIRATION_SECONDS=None
      - RESULT_STORAGE_EXPIRATION_SECONDS=None
      - MIXED_STORAGE_DETECTOR_STORAGE=tc_redis.storages.redis_storage

  remotecv:
    image: apsl/remotecv:latest
    container_name: remotecv
    restart: always
    networks:
      - front
      - back
    environment:
      - REMOTECV_REDIS_HOST=redis
      - REMOTECV_REDIS_PORT=6379
      - REMOTECV_REDIS_DATABASE=0
      - REMOTECV_LOADER=remotecv_aws.loader
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_LOADER_BUCKET=${S3_BUCKET_NAME}
      - LOG_LEVEL=DEBUG

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    networks:
      - front
      - back

  postgres:
    image: postgres
    container_name: postgres
    restart: always
    volumes:
      - /var/run/postgresql
      - ./postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD:

  facebook-photo-site:
    image: andbobsyouruncle/facebook-photo-site:latest
    command: bash -c "rails-init && /sbin/my_init"
    container_name: facebook-photo-site
    restart: always
    depends_on:
      - postgres
    volumes_from:
      - postgres
    networks:
      - front
      - back
    environment:
      - THUMBOR_URL=${THUMBOR_URL}
      - VIRTUAL_HOST=${FB_PHOTO_SITE_HOSTNAME}
      - VIRTUAL_PORT=443
      - LETSENCRYPT_HOST=${FB_PHOTO_SITE_HOSTNAME}
      - LETSENCRYPT_EMAIL=${FB_PHOTO_SITE_EMAIL}
      - SECRET_KEY_BASE=${FB_PHOTO_SITE_SECRET_KEY_BASE}
      - FB_APP_ID=${FB_APP_ID}
      - FB_APP_SECRET=${FB_APP_SECRET}
      - FB_PHOTO_SITE_ADMINS=${FB_PHOTO_SITE_ADMINS}
      - S3_BUCKET_NAME=${S3_BUCKET_NAME}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}
      - AWS_HOST_NAME=${AWS_HOST_NAME}
      - THUMBOR_KEY=${THUMBOR_KEY}

volumes:
  data:
    driver: local
  logs:
    driver: local

networks:
  front:
    external:
      name: traffic_front
  back:
    external:
      name: traffic_back
